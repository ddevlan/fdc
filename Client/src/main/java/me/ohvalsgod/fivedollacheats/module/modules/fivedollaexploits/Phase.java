package me.ohvalsgod.fivedollacheats.module.modules.fivedollaexploits;

import me.ohvalsgod.fivedollacheats.event.EventTarget;
import me.ohvalsgod.fivedollacheats.event.events.PreMotionUpdateEvent;
import me.ohvalsgod.fivedollacheats.module.AbstractModule;
import me.ohvalsgod.fivedollacheats.module.category.ModuleCategory;
import me.ohvalsgod.fivedollacheats.util.BlockUtils;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import org.lwjgl.input.Keyboard;

public class Phase extends AbstractModule {

    public Phase() {
        super("Phase", "ยง5Phase", "Right thru the fence gates, rob they shit!", "v0.0.1", "Skip Clip", Keyboard.KEY_G, false, ModuleCategory.FIVEDOLLAEXPLOITS);
    }

    private boolean collided = false;

    @Override
    public void onEnable() {
        super.onEnable();
    }

    @Override
    public void onDisable() {
        super.onDisable();
    }

    @EventTarget
    public void onPreMotionUpdate(PreMotionUpdateEvent event) {
        if (!mc.thePlayer.isCollidedHorizontally && collided)
            collided = false;

        float dir = mc.thePlayer.rotationYaw;
        if (mc.thePlayer.moveForward < 0.0F)
            dir += 180.0F;
        if (mc.thePlayer.moveStrafing > 0.0F)
            dir -= 90.0F * (mc.thePlayer.moveForward < 0.0F ? -0.5F : mc.thePlayer.moveForward > 0.0F ? 0.5F : 1.0F);
        if (mc.thePlayer.moveStrafing < 0.0F)
            dir += 90.0F * (mc.thePlayer.moveForward < 0.0F ? -0.5F : mc.thePlayer.moveForward > 0.0F ? 0.5F : 1.0F);

        float xD = (float) Math.cos((dir + 90.0F) * Math.PI / 180.0D);
        float zD = (float) Math.sin((dir + 90.0F) * Math.PI / 180.0D);

        boolean moving = mc.thePlayer.movementInput.moveForward != 0;
        boolean strafing = mc.thePlayer.movementInput.moveStrafe != 0;

        moving = moving || strafing;
        if (mc.thePlayer.isCollidedHorizontally && !collided && mc.thePlayer.onGround && !BlockUtils.isInsideBlock(mc.thePlayer) && moving) {
            mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SNEAKING));

            float[] offset = new float[]{xD * 0.25F, 1.0F, zD * 0.25F};

            double[] movements = {
                    0.025000000372529D,
                    0.02857142899717604D,
                    0.0333333338300387D,
                    0.04000000059604645D};

            for (int i = 0; i < movements.length; i++) {
                mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - movements[i] + 0.025F, mc.thePlayer.posZ, mc.thePlayer.onGround));
                mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX + offset[0] * i, mc.thePlayer.posY, mc.thePlayer.posZ + offset[2] * i, mc.thePlayer.onGround));
            }

            mc.thePlayer.setPosition(mc.thePlayer.posX + (offset[0] * 0.05F), mc.thePlayer.posY, mc.thePlayer.posZ + (offset[2] * 0.05F));

            if (mc.thePlayer.isCollidedHorizontally)
                collided = true;

            mc.getNetHandler().addToSendQueue(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING));
        }
    }

}
